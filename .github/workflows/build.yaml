name: CI/CD Pipeline

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v**'
  pull_request:
    branches:
      - '*'
env:
  SONAR_PROJECT_KEY: avansoft_flickit-dsl-parser
  REGISTRY: ghcr.io
  IMAGE_NAME: avansoft/flickit-dsl-parser

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && github.ref_type == 'branch') ||
      (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: Build with Maven
        run: mvn clean package

      - name: Deploy to GitHub Packages
        run: mvn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          MAVEN_USERNAME: ${{ github.actor }}
          MAVEN_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}

  test:
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && github.ref_type == 'branch') }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: Run Tests
        run: mvn test

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

  sonar:
    needs: [test]
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && github.ref_type == 'branch') }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}

  build-and-push-latest-image:
    needs: [sonar]
    name: deploy latest image
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true }}

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: avansoft
          password: ${{ secrets.GH_PACKAGES_TOKEN }}
      - uses: actions/checkout@v3
      - name: create image from repository
        run: |
          curl -L -O -u $GH_ACTOR:$GH_PACKAGES_TOKEN "https://maven.pkg.github.com/avansoft/flickit-dsl-parser/org/flickit/dsl-parser/$RELEASE_VERSION/dsl-parser-$RELEASE_VERSION.jar" -o dsl-parser-$RELEASE_VERSION.jar
          docker build --build-arg MYFILE=dsl-parser-$RELEASE_VERSION.jar -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }} .
      - name: push image to GitHub Container Registry
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

  build-and-push-image:
    needs: [build]
    name: deploy image
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}

    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v3
      - name: Set output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}
      - name: login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: avansoft
          password: ${{ secrets.GH_PACKAGES_TOKEN }}
      - uses: actions/checkout@v3
      - name: create image from repository
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          curl -L -O -u $GH_ACTOR:$GH_PACKAGES_TOKEN "https://maven.pkg.github.com/avansoft/flickit-dsl-parser/org/flickit/dsl-parser/$RELEASE_VERSION/dsl-parser-$RELEASE_VERSION.jar" -o dsl-parser-$RELEASE_VERSION.jar
          docker build --build-arg MYFILE=dsl-parser-$RELEASE_VERSION.jar -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }} .
      - name: push image to GitHub Container Registry
        run: docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}
